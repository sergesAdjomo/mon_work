# ###########################################################################
# VARIABLE GENERE PAR COOKIECUTTER
# ###########################################################################
export _CODE_PROJET=ciam
# ###########################################################################
# VARIABLE LANGUE
# ###########################################################################
export LANG="fr_FR.UTF-8"
export LC_ALL="fr_FR.UTF-8"

# ###########################################################################
# CONFIGURATION PROXY
# ###########################################################################
export all_proxy="http://pxy-http-srv.serv.cdc.fr:8080"
export https_proxy="http://pxy-http-srv.serv.cdc.fr:8080"
export http_proxy="http://pxy-http-srv.serv.cdc.fr:8080"

# ###########################################################################
# CONFIGURATION SQOOP
# ###########################################################################
export SQOOP_HOME="/opt/cloudera/parcels/CDH/lib/sqoop"
export SQOOP_CONF_DIR="/opt/cloudera/parcels/CDH/lib/sqoop/conf"
export LANG="fr_FR.UTF-8"
export LC_ALL="fr_FR.UTF-8"
export LD_LIBRARY_PATH="/opt/cloudera/parcels/CDH/lib/impala/lib/:$LD_LIBRARY_PATH"
# ###########################################################################
# CONFIGURATION HIVE
# ###########################################################################
export HIVE_HOME=${HIVE_HOME:-/opt/cloudera/parcels/CDH/lib/hive}
export HIVE_CONF_DIR=${HIVE_CONF_DIR:-/opt/cloudera/parcels/CDH/lib/hive/conf}

# ###########################################################################
# CONFIGURATION jaydebapi
# ###########################################################################
export CLASSPATH=${CLASSPATH}:$(hadoop classpath --glob)

# ###########################################################################
# CONFIGURATION PYARROW
# ##########################################################################
export ARROW_LIBHDFS_DIR=/opt/cloudera/parcels/CDH/lib64
export CLASSPATH=$CLASSPATH:$HADOOP_HOME/bin/hdfs

# ###########################################################################
# PARAM JAVA
# ###########################################################################
export JAVA_HOME=/usr/lib/jvm/jre-1.8.0-openjdk
javaSetEnv "$SQOOP_HOME/lib" "/etc/alternatives/jre_1.8.0_openjdk"

# ###########################################################################
# CONFIGURATION HADOOP
# ###########################################################################
export CLASSPATH=$(hadoop classpath --glob):${SQOOP_HOME}/sqoop-*.jar:${HIVE_HOME}/jdbc/hive-jdbc-*.jar:${HIVE_HOME}/lib/*:${SPARK_HOME}/jars/*.jar


# ###########################################################################
#  	TEST si on est sur le rep projet de rec et qu'on
#   sur le edge de DEV alors forcÃ© vraiable YCIENV=U
# ###########################################################################
if [[  "$(echo ${_YCDAPP} | cut -d'/' -f2 | rev | cut -d '-' -f1 | rev)" = "rec" ]]
then
	echo "====> run depuis rep projet REC dans le EDGE de DEV : forcer valeur YCIENV a U "
	export YCIENV=U
fi

##########################################################################
# **************CONFIGURATION A SETTER************************************
##########################################################################
if [[ "${YCIENV}" = "D" ||  "${YCIENV}" = "B" ]]
then
        export ENV_DSN="dev"
		
		# vars pour l'ingestion sqoop
		export SQOOP_SRC_JDBC="jdbc:postgresql://cl2dvdb00371.cloud.cdc.fr:12000/bigdata"
		export SQOOP_SRC_USER="usertp"
		export SQOOP_SRC_PASSWORD=""
		export SQOOP_SRC_JKS_ALIAS="postgre.password.alias"
		export SQOOP_SRC_JKS_PATH="jceks://hdfs/dev/icdc/flux_entrant/bd3/depot/db.password.jceks"
		export SQOOP_SRC_WALLET_PATH=""
		export ENVIRONEMENT="dev"
		export KAFKA_ENV="in02"
		export SUF_SCHEMA_REGISTRY="-int.di.cdc.fr"
		export KAFKA_BOOTSTRAP_SERVERS_LOG="cp-ck-gw01-c1-in02.serv.cdc.fr:11060,cp-ck-gw02-c1-in02.serv.cdc.fr:11060,cp-ck-gw03-c1-in02.serv.cdc.fr:11060,cp-ck-gw04-c1-in02.serv.cdc.fr:11060"
		export KAFKA_BOOTSTRAP_SERVERS="cp-ck-gw01-c1-in02.serv.cdc.fr:11060,cp-ck-gw02-c1-in02.serv.cdc.fr:11060,cp-ck-gw03-c1-in02.serv.cdc.fr:11060,cp-ck-gw04-c1-in02.serv.cdc.fr:11060"
        typeset -l ENV_LC=$ENV_DSN
fi 
if [ "${YCIENV}" = "U" ]
then
        export ENV_DSN="rec"

		# vars pour l'ingestion sqoop
		export SQOOP_SRC_JDBC=""
		export SQOOP_SRC_USER=""
		export SQOOP_SRC_PASSWORD=""
		export SQOOP_SRC_JKS_ALIAS="r"
		export SQOOP_SRC_JKS_PATH=""
		export SQOOP_SRC_WALLET_PATH=""
		export ENVIRONEMENT="rec"
		export KAFKA_ENV="rc01"
		export SUF_SCHEMA_REGISTRY="-rec.hpocdc.local"
		export KAFKA_BOOTSTRAP_SERVERS_LOG="cp-ck-gw01-c1-rc01.serv.cdc.fr:11060,cp-ck-gw02-c1-rc01.serv.cdc.fr:11060,cp-ck-gw03-c1-rc01.serv.cdc.fr:11060,cp-ck-gw04-c1-rc01.serv.cdc.fr:11060"
		export KAFKA_BOOTSTRAP_SERVERS="cp-ck-gw01-c1-rc01.serv.cdc.fr:11060,cp-ck-gw02-c1-rc01.serv.cdc.fr:11060,cp-ck-gw03-c1-rc01.serv.cdc.fr:11060,cp-ck-gw04-c1-rc01.serv.cdc.fr:11060"
        typeset -l ENV_LC=$ENV_DSN
fi 
if [ "${YCIENV}" = "P" ]
then
        export ENV_DSN="prex"
		
		# vars pour l'ingestion sqoop
		export SQOOP_SRC_JDBC=""
		export SQOOP_SRC_USER=""
		export SQOOP_SRC_PASSWORD=""
		export SQOOP_SRC_JKS_ALIAS="r"
		export SQOOP_SRC_JKS_PATH=""
		export SQOOP_SRC_WALLET_PATH=""
		export ENVIRONEMENT="prex"
		export KAFKA_ENV="va01"
		export SUF_SCHEMA_REGISTRY="-prex.hpoext.cdc.fr"
		export KAFKA_BOOTSTRAP_SERVERS_LOG="cp-kafka01-va01.serv.cdc.fr:9092,cp-kafka02-va01.serv.cdc.fr:9092,cp-kafka03-va01.serv.cdc.fr:9092,cp-kafka04-va01.serv.cdc.fr:9092,cp-kafka05-va01.serv.cdc.fr:9092,cp-kafka06-va01.serv.cdc.fr:9092,cp-kafka07-va01.serv.cdc.fr:9092,cp-kafka08-va01.serv.cdc.fr:9092"
		export KAFKA_BOOTSTRAP_SERVERS="cp-kafka01-va01.serv.cdc.fr:9092,cp-kafka02-va01.serv.cdc.fr:9092,cp-kafka03-va01.serv.cdc.fr:9092,cp-kafka04-va01.serv.cdc.fr:9092,cp-kafka05-va01.serv.cdc.fr:9092,cp-kafka06-va01.serv.cdc.fr:9092,cp-kafka07-va01.serv.cdc.fr:9092,cp-kafka08-va01.serv.cdc.fr:9092"
        typeset -l ENV_LC=$ENV_DSN  
fi 
if [ "${YCIENV}" = "X" ]
then

        export ENV_DSN="prod"
		
		# vars pour l'ingestion sqoop
		export SQOOP_SRC_JDBC=""
		export SQOOP_SRC_USER=""
		export SQOOP_SRC_PASSWORD=""
		export SQOOP_SRC_JKS_ALIAS=""
		export SQOOP_SRC_JKS_PATH=""
		export SQOOP_SRC_WALLET_PATH=""
		export ENVIRONEMENT="prod"
		export KAFKA_ENV="pr01"
		export SUF_SCHEMA_REGISTRY=".extranet.cdc.fr"
		export KAFKA_BOOTSTRAP_SERVERS_LOG="cp-kafka01-pr01.serv.cdc.fr:9092,cp-kafka02-pr01.serv.cdc.fr:9092,cp-kafka03-pr01.serv.cdc.fr:9092,cp-kafka04-pr01.serv.cdc.fr:9092,cp-kafka05-pr01.serv.cdc.fr:9092,cp-kafka06-pr01.serv.cdc.fr:9092,cp-kafka07-pr01.serv.cdc.fr:9092,cp-kafka08-pr01.serv.cdc.fr:9092"
		export KAFKA_BOOTSTRAP_SERVERS="cp-kafka01-pr01.serv.cdc.fr:9092,cp-kafka02-pr01.serv.cdc.fr:9092,cp-kafka03-pr01.serv.cdc.fr:9092,cp-kafka04-pr01.serv.cdc.fr:9092,cp-kafka05-pr01.serv.cdc.fr:9092,cp-kafka06-pr01.serv.cdc.fr:9092,cp-kafka07-pr01.serv.cdc.fr:9092,cp-kafka08-pr01.serv.cdc.fr:9092"
        typeset -l ENV_LC=$ENV_DSN 
fi

# ###########################################################################
# CONFIGURATION SPARK
# ###########################################################################

export SPARKUI_USERS=$(getent group gf_hdp_${ENV_DSN}_${_YCICODE}_moe | cut -d ':' -f4)
export SPARK_MAJOR_VERSION=3
export PYTHON_VERSION=3.8
export SPARK_HOME=/opt/cloudera/parcels/SPARK3/lib/spark3
# ###########################################################################
# variables appli valable surtout les  ENV
# ###########################################################################
export CSV_INPUT_PATH_ENV=/${ENV_DSN}/ep/flux_entrant/${_YCICODE}/depot/input_csv/
export CSV_STAGING_PATH_ENV=/${ENV_DSN}/ep/flux_entrant/${_YCICODE}/depot/staging/input_csv/
export INGEST_EXCEL_INPUT_PATH_ENV=/${ENV_DSN}/ep/flux_entrant/${_YCICODE}/depot/excel_input/
export INGEST_EXCEL_HIVE_DB_NAME_ENV=db_${ENV_DSN}_${_YCICODE}_brute
export INGEST_EXCEL_HIVE_DB_PATH_ENV=/${ENV_DSN}/ep/flux_entrant/${_YCICODE}/app_data_db_external/db_${ENV_DSN}_${_YCICODE}.db

###########################################################################
#     VARIABLES PAR CLUSTERS (HORPR:DEV/REC) et (PREX/PROD/PSI)
###########################################################################

# cas DEV REC 
if [[ "${YCIENV}" = "D" ||  "${YCIENV}" = "U"  || "${YCIENV}" = "B" ]]
then
	# vars pour la conf des job PySpark
	export DRIVER_MEMORY=5g
	export NUM_EXECUTORS=2
	export EXECUTOR_MEMORY=5g
	export EXECUTOR_CORES=2
	export IMPALA_JAR="/dz-bigdata-plateforme-dev/applis/bd3/jars/*.jar"
	#--> URL HIVE pour lancemement de req sql sur beeline en mode zookeeper
	export HIVE_JDBC_ZOOKEEPER="`cat /opt/cloudera/parcels/CDH/lib/hive/conf/beeline-site.xml|grep  hiveserver2|sed 's/</ /g'|sed 's/>/ /g'|awk '{print $2}'`;auth-kerberos?tez.queue.name=${ENV_DSN}"
fi

# cluster PROD et PSI 
#COM : adapter les variables ou le code pour gerer
if [[ "${YCIENV}" = "X" ||  "${YCIENV}" = "P" ]]
then
	# vars pour la conf des job PySpark
	export DRIVER_MEMORY=12g
	export NUM_EXECUTORS=3
	export EXECUTOR_MEMORY=10g
	export EXECUTOR_CORES=5
	export IMPALA_JAR="/dz-bigdata-plateforme/applis/bd3/jars/*.jar"
	#--> URL HIVE pour lancemement de req sql sur beeline
	export HIVE_JDBC_ZOOKEEPER="`cat /opt/cloudera/parcels/CDH/lib/hive/conf/beeline-site.xml|grep  hiveserver2|sed 's/</ /g'|sed 's/>/ /g'|awk '{print $2}'`;auth-kerberos?tez.queue.name=${ENV_DSN}"
fi

if ! internal_nameservice=$(hdfs getconf -confKey fs.defaultFS); then
    echo "error retrieving param fs.defaultFS "; return 1
else
    # extract internal_nameservice value from string: hdfs://<internal_nameservice>
    internal_nameservice=${internal_nameservice:7}
fi
export nameservice=$internal_nameservice
echo $nameservice

# ###########################################################################
# CONFIGURATION PYTHON
# ###########################################################################
export CLASSPATH=${CLASSPATH}:${SQOOP_HOME}/lib
export PYTHONDONTWRITEBYTECODE=1
# ###########################################################################
# CONFIGURATION environment
# ###########################################################################
if [[ "${YCIENV}" = "D" ||  "${YCIENV}" = "B" ]]
then
        #Env
        export ENV_=${ENV_:-"dev"}
        export ENVIRONEMENT="dev"
								export KAFKA_ENV="in02"
        typeset -l ENV_LC=$ENV_
fi 
if [ "${YCIENV}" = "U" ]
then
        #Env
        export ENV_=${ENV_:-"rec"}
        export ENVIRONEMENT="rec"
								export KAFKA_ENV="rc01"
        typeset -l ENV_LC=$ENV_
fi 
if [ "${YCIENV}" = "P" ]
then
        #Env
        export ENV_=${ENV_:-"prex"}
        export ENVIRONEMENT="prex"
								export KAFKA_ENV="va01"
        typeset -l ENV_LC=$ENV_   
fi 
if [ "${YCIENV}" = "X" ]
then
        #Env
        export ENV_=${ENV_:-"prod"}
        export ENVIRONEMENT="prod"
								export KAFKA_ENV="pr01"
        typeset -l ENV_LC=$ENV_  
fi 

# ###########################################################################
# VARIABLE QUAND ON DEV SUR HOME
# ###########################################################################
if [[  "$(echo ${_YCDAPP} | cut -d'/' -f2 | rev | cut -d '-' -f1 | rev)" = "home" ]]
then 
    echo "we are running in home "
    echo ${_YCDAPP}
    
    export VENV_PYTHON_PATH=/dz-bigdata-${_CODE_PROJET}-${ENV_DSN}/applis/${_YCICODE}/virtualenv
    export _YCDSSL=/dz-bigdata-${_CODE_PROJET}-${ENV_DSN}/applis/${_YCICODE}/ext/ssl
else
    export VENV_PYTHON_PATH=${_YCDAPP}/virtualenv
    export _YCDSSL=${_YCDSSL}
fi

# ###########################################################################
# CONFIGURATION keytab
# ###########################################################################
export KEYTAB_NAME="svchdp-etl-${_YCICODE}-${ENV_DSN}"
export KEYTAB_PATH="${_YCDSSL}/$KEYTAB_NAME.keytab"
export KEYTAB_USER="${KEYTAB_NAME}@AP.CDC.FR"
export username=${KEYTAB_USER}
export JAAS_PATH=${_YCDPARM}/spark_jaas.conf

###########################################################################
# Conf du VENV 
###########################################################################

#export APP_MASTER_ENV=./${_YCICODE}_venv/bin/python
#export ARCHIVES=${VENV_PYTHON_PATH}/${VIRTUAL_ENV_NAME}.tar.gz\#${_YCICODE}_venv
#export MAIN=${_YCDBIN}/main_${_YCDAPPNAME}.py

if [[  "$(echo ${_YCDAPP} | cut -d'/' -f2 | rev | cut -d '-' -f1 | rev)" = "home" ]]
then 
	# si sur le home je recup le num de version depuis setup.py
    echo "we are running in home "
    export PACKAGE_VERSION=`grep -oP "(?<=version=(\'|\"))[^(\'|\")]+" ${_YCDAPP}/setup.py`
else
	# si sur un dz je recup le num de version depuis le nom de package le plus grand 
    export PACKAGE_VERSION=`ls ${_YCDBIN}/${_YCICODE}-*_pyspark_payload.zip | grep -oP "${_YCICODE}-\K[0-9]+\.[0-9]+\.[0-9]+" | sort -V | tail -n 1`
fi

#METHODE CMMT
export APP_MASTER_ENV=./payload/bin/python
export ARCHIVES=${_YCDBIN}/${_YCICODE}-${PACKAGE_VERSION}_pyspark_payload.zip#payload
export MAIN=${_YCDBIN}/${_YCICODE}-${PACKAGE_VERSION}_venv/lib/python${PYTHON_VERSION}/site-packages/${_YCDAPPNAME}/main.py

# ###########################################################################
# variables appli valable surtout les  ENV
# ###########################################################################
#export CSV_INPUT_PATH_ENV=/${ENV_DSN}/ep/flux_entrant/${_YCICODE}/depot/input_csv/
#export CSV_STAGING_PATH_ENV=/${ENV_DSN}/ep/flux_entrant/${_YCICODE}/depot/staging/input_csv/

# ###########################################################################
# CONFIGURATION workspace 
# ###########################################################################
#Initialisation du log sur ton workspace
export DTEM=$(date +'%Y%m%d%H%M')
export YARN_TRACE_NAME=${LOGNAME}_yarn.log
export TRACE=${_YCDLOGAPP}/${DTEM}_${_YCDAPPNAME}.log
export LOCAL_YARN_TRACE=${_YCDLOGAPP}/${DTEM}_${_YCDAPPNAME}_${_YCICODE}-yarn.log
export HDFS_YARN_TRACE=/${ENV_DSN}/ep/traitement/${_YCICODE}/app_log/spark_yarn/$(date +%Y%m)/
export LOGFILE=${_YCDLOGAPP}/${DTEM}_${_YCDAPPNAME}_${_YCICODE}.log


# DATE CTRLM
if [[ "${YCIENV}" = "D" ||  "${YCIENV}" = "U" ||  "${YCIENV}" = "B" ]]
then
    echo "Simulatiuon de la DATE_CTRLM"
    export DATE_CTRLM=$(date +'%Y%m%d')
else 
    export DATE_CTRLM=$1
fi
export DTCTRLM=$DATE_CTRLM
